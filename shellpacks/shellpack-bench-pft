#!/bin/bash
# This script installs pft and whatever
P=pft-bench
DEFAULT_VERSION=0.12x
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--smallonly)
		SMALLONLY=yes;
		shift
		;;
	--hugeonly)
		HUGEONLY=yes;
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/pft-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/pft-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-pft -v ${VERSION}  || die pft install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/pft-${VERSION}-installed || die Failed to cd to pft install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo pft installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

PFT_CLIENT_SWITCH=-t
if [ "$PFT_USE_PROCESSES" = "yes" ]; then
	PFT_CLIENT_SWITCH=-n
fi

HUGECTL=
HUGETLB_OPT=
if [ "$HUGEONLY" = yes ] ; then
	if [ "USE_DYNAMIC_HUGEPAGES" = yes ] ; then
		HUGECTL="hugectl --verbose 0 --text --data --bss --heap --shm"
	else
		HUGETLB_OPT=-H
	fi
fi

cd $SHELLPACK_SOURCES/pft-${VERSION}-installed || die Failed to cd to pft directory
THREADS=
START_THREAD=1
END_THREAD=$PFT_MAX_CLIENTS
if [ $END_THREAD -gt 32 ]; then
        THREADS=`seq $START_THREAD 3 8`
        THREADS="$THREADS `seq 12 9 32`"
        THREADS="$THREADS `seq 48 31 $END_THREAD`"
elif [ $END_THREAD -gt 8 ]; then
        THREADS=`seq $START_THREAD 2 8`
        THREADS="$THREADS `seq 12 6 $END_THREAD`"
else
        THREADS=`seq $START_THREAD 2 $END_THREAD`
fi
if [ `echo $THREADS | awk '{print $NF}'` -ne $END_THREAD ]; then
	THREADS="$THREADS $END_THREAD"
fi

for NR_THREADS in $THREADS; do
	mmtests_activity process $NR_THREADS/$END_THREAD
	mmtests_activity client ${NR_THREADS}
	monitor_pre_hook $LOGDIR_RESULTS ${NR_THREADS}
	echo -n > $LOGDIR_RESULTS/pft-${NR_THREADS}.log
	for ITER in `seq 1 $PFT_ITERATIONS`; do
		( $HUGECTL ./pft \
			-m			$PFT_MAPPING_SIZE \
			$PFT_CLIENT_SWITCH	${NR_THREADS} $HUGETLB_OPT \
			2>&1 | tee -a $LOGDIR_RESULTS/pft-${NR_THREADS}.log ) \
				|| die Failed to run pft
	done
	monitor_post_hook $LOGDIR_RESULTS ${NR_THREADS}
	CLIENT=$((CLIENT+1))
done

exit $SHELLPACK_SUCCESS
#### Description pft
#### Details pft-bench 11
